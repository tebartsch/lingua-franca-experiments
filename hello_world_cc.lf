target C

reactor Sensor(period:time(100 msec)) {
    output out:int8_t
    timer t(/*offset*/0 msec, period)
    state s:int32_t(0)
    reaction(t) -> out {=
        printf("Firing %d\n", self->period);
        lf_set(out, self->s++);
    =}
}

reactor Processor {
    input inp_1:int8_t
    input inp_2:int8_t
    output out:int8_t
    reaction(inp_1, inp_2) -> out {=
        lf_set(out, inp_1->value + inp_2->value);
    =}
}

reactor Printer {
    input inp:int8_t
    reaction(inp) {=
        printf("%d\n", inp->value);
    =}
}

main reactor {
    sensor_1 = new Sensor(period = 1 sec)
    // Processor will be fired only when the two sensors 
    // fire at the same logical time -> logical simultaneity
    // change to `501 msec` to make the the processor fire
    // every time a sensor changes (until they match again)
    sensor_2 = new Sensor(period = 500 msec)
    processor = new Processor()
    printer = new Printer()
    sensor_1.out -> processor.inp_1
    sensor_2.out -> processor.inp_2
    processor.out -> printer.inp
}

